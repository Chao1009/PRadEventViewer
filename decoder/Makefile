#############################################################################
# Makefile for building: PRadEventViewer
# Generated by qmake (3.0) (Qt 5.6.0)
# Project:  QMakefile.pro
# Template: app
# Command: /usr/bin/qmake-qt5 -o Makefile QMakefile.pro
#############################################################################

MAKEFILE      = Makefile
PRAD_PATH     = ..
####### Compiler, tools and options

CC            = gcc
CXX           = g++
FORTRAN       = gfortran
FFLAGS	      = -fPIC
CXXFLAGS_LIBS = -shared -pipe -std=c++11 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -std=gnu++0x -Wall -W -Wno-unused-result -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -std=c++11 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -std=gnu++0x -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I. -I$(PRAD_PATH)/include -I$(PRAD_PATH)/thirdparty/include -I$(ROOTSYS)/include
DEL_FILE      = rm -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
COPY          = cp -f
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
INSTALL_FILE  = install -m 644 -p
INSTALL_PROGRAM = install -m 755 -p
INSTALL_DIR   = cp -f -R
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
TAR           = tar -cf
COMPRESS      = gzip -9f
LINK          = g++
LFLAGS_LIBS   = -shared -Wl,-O1 -Wl,-z,relro
LFLAGS        = -Wl,-O1 -Wl,-z,relro
LIBS          = $(SUBLIBS) -L$(ROOTSYS)/lib -lCore -lRint -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lGui -lSpectrum -lpthread -Llib -lexpat -lgfortran
AR            = ar cqs
RANLIB        = 
SED           = sed
STRIP         = 

####### Targets, add new objects here

# lib PRadDecoder
T_LIBS_DIR    = lib
TARGET_LIBS   = libPRadDecoder.so

LIB_SRC_DIR   = $(PRAD_PATH)/src

LIB_OBJ_DIR   = $(T_LIBS_DIR)/obj

LIB_OBJECTS   = $(LIB_OBJ_DIR)/PRadDAQUnit.o \
                $(LIB_OBJ_DIR)/PRadTDCGroup.o \
                $(LIB_OBJ_DIR)/PRadEvioParser.o \
                $(LIB_OBJ_DIR)/PRadDSTParser.o \
                $(LIB_OBJ_DIR)/PRadDataHandler.o \
                $(LIB_OBJ_DIR)/PRadException.o \
                $(LIB_OBJ_DIR)/PRadBenchMark.o \
                $(LIB_OBJ_DIR)/ConfigParser.o \
                $(LIB_OBJ_DIR)/PRadReconstructor.o \
                $(LIB_OBJ_DIR)/PRadGEMSystem.o \
                $(LIB_OBJ_DIR)/PRadIslandCluster.o \
                $(LIB_OBJ_DIR)/PRadSquareCluster.o \
                $(LIB_OBJ_DIR)/island.o


# examples
TARGET        = testIsland \
                testEPICS \
                testLMS \
                replay

EXE_SRC_DIR   = src

EXE_OBJ_DIR   = obj

OBJECTS       = $(EXE_OBJ_DIR)/testIsland.o \
                $(EXE_OBJ_DIR)/testEPICS.o \
                $(EXE_OBJ_DIR)/testLMS.o \
                $(EXE_OBJ_DIR)/replay.o

EXE_LIBS      = -L$(T_LIBS_DIR) -lPRadDecoder

first: all

all: lib exe

lib: Makefile $(TARGET_LIBS)

exe: Makefile $(TARGET)

####### Build rules

$(TARGET_LIBS):  $(LIB_OBJECTS)
	$(LINK) $(LFLAGS_LIBS) -o $(T_LIBS_DIR)/$(TARGET_LIBS) $(LIB_OBJECTS) $(OBJCOMP) $(LIBS)

$(TARGET): $(OBJECTS)
	$(LINK) $(LFLAGS) -o $@ $(EXE_OBJ_DIR)/$@.o $(OBJCOMP) $(LIBS) $(EXE_LIBS)

$(EXE_OBJ_DIR)/%.o: $(EXE_SRC_DIR)/%.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

$(LIB_OBJ_DIR)/%.o: $(LIB_SRC_DIR)/%.cpp
	$(CXX) -c $(CXXFLAGS_LIBS) $(INCPATH) -o $@ $<

$(LIB_OBJ_DIR)/island.o: $(LIB_SRC_DIR)/island.F
	$(FORTRAN) -c $(FFLAGS) $(INCPATH) -o $@ $<

####### Clean
clean: cleanobj cleanexe cleanlib

cleanobj:
	$(DEL_FILE) $(LIB_OBJ_DIR)/*.o $(EXE_OBJ_DIR)/*.o

cleanexe:
	$(DEL_FILE) $(TARGET)

cleanlib:
	$(DEL_FILE) $(T_LIBS_DIR)/$(TARGET_LIBS)

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:
