#############################################################################
# Makefile for building: PRadEventViewer
# Generated by qmake (3.0) (Qt 5.6.0)
# Project:  QMakefile.pro
# Template: app
# Command: /usr/bin/qmake-qt5 -o Makefile QMakefile.pro
#############################################################################

MAKEFILE      = Makefile
PRAD_PATH     = ..
# enable multi-threading in the code
DEFINES       = -DMULTI_THREAD

####### Compiler, tools and options
CC            = gcc
CXX           = g++
FORTRAN       = gfortran
FFLAGS        = -fPIC
CXXFLAGS_LIBS = -shared -std=c++11 -O2 -g -pipe -Wall -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -fPIC $(DEFINES)
CXXFLAGS      = -std=c++11 -O2 -g -pipe -Wall -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -fPIC $(DEFINES)
INCPATH       = -Iinclude -I$(PRAD_PATH)/include -I$(ROOTSYS)/include
DEL_FILE      = rm -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
COPY          = cp -f
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
INSTALL_FILE  = install -m 644 -p
INSTALL_PROGRAM = install -m 755 -p
INSTALL_DIR   = cp -f -R
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
TAR           = tar -cf
COMPRESS      = gzip -9f
LINK          = g++
LFLAGS_LIBS   = -shared -Wl,-O1 -Wl,-z,relro
LFLAGS        = -Wl,-O1 -Wl,-z,relro
LIBS          = $(SUBLIBS) -L$(ROOTSYS)/lib -lCore -lRint -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lGui -lSpectrum -lpthread -Llib -lexpat -lgfortran
AR            = ar cqs
RANLIB        = 
SED           = sed
STRIP         = 

####### Targets, add new objects here

# lib PRadDecoder
LIB_DIR       = lib
TARGET_LIB    = libprana.so
LIB_SRC_DIR   = $(PRAD_PATH)/src
LIB_OBJ_DIR   = $(LIB_DIR)/obj
LIB_CLASSES   = PRadDAQChannel \
				PRadADCChannel \
				PRadTDCChannel \
				PRadCalibConst \
                PRadEvioParser \
                PRadDSTParser \
                PRadDataHandler \
                PRadException \
                PRadBenchMark \
                ConfigParser \
                ConfigValue \
                ConfigObject \
                PRadDetector \
                PRadHyCalSystem \
                PRadHyCalDetector \
                PRadHyCalModule \
                PRadHyCalCluster \
                PRadClusterProfile \
                PRadSquareCluster \
                PRadIslandCluster \
                PRadGEMSystem \
                PRadGEMDetector \
                PRadGEMPlane \
                PRadGEMFEC \
                PRadGEMAPV \
                PRadGEMCluster \
                PRadEventFilter \
                PRadCoordSystem \
                PRadDetMatch \
                PRadEPICSystem \
                PRadInfoCenter \
                PRadTaggerSystem

LIB_OBJECTS   = $(addprefix $(LIB_OBJ_DIR)/, $(LIB_CLASSES:=.o))


# examples
EXAMPLE_SRC   = src
EXAMPLE_DIR   = .
EXAMPLE       = testGEM \
                testHyCal \
				testDST \
                testLMS \
                testEPICS \
                testMatch \
                testSim \
				testPerform \
                getAvgGain \
                replay \
                eventSelect \
				cosmicCheck \
				mollerCenter \
				physCalib
#                testCombine

EXAMPLE_BINS  = $(addprefix $(EXAMPLE_DIR)/, $(EXAMPLE))
EXAMPLE_LIBS  = -L$(LIB_DIR) -lprana

first: all

all: lib exe

lib: Makefile $(TARGET_LIB)

exe: Makefile $(EXAMPLE_BINS)



####### Build rules

$(TARGET_LIB):  $(LIB_OBJECTS)
	$(LINK) $(LFLAGS_LIBS) -o $(LIB_DIR)/$(TARGET_LIB) $(LIB_OBJECTS) $(LIBS)

$(LIB_OBJ_DIR)/%.o: $(LIB_SRC_DIR)/%.cpp
	$(CXX) -c $(CXXFLAGS_LIBS) $(INCPATH) -o $@ $<

$(LIB_OBJ_DIR)/island.o: $(LIB_SRC_DIR)/island.F
	$(FORTRAN) -c $(FFLAGS) $(INCPATH) -o $@ $<

$(EXAMPLE_DIR)/%: $(EXAMPLE_SRC)/%.cpp
	$(CXX) $(CXXFLAGS) -o $@ $< $(INCPATH) $(LIBS) $(EXAMPLE_LIBS)


####### Clean
clean: cleanobj cleanexe cleanlib

cleanobj:
	$(DEL_FILE) $(LIB_OBJ_DIR)/*.o $(EXE_OBJ_DIR)/*.o

cleanexe:
	$(DEL_FILE) $(EXAMPLE)

cleanlib:
	$(DEL_FILE) $(LIB_DIR)/$(TARGET_LIB)

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

